name: Build Release
# https://github.com/vrchat-community/template-package/blob/main/.github/workflows/release.yml

on: 
  workflow_dispatch:

jobs:

  # Validate Repository Configuration
  config:
    runs-on: ubuntu-latest
    outputs:
      config_package: ${{ steps.config_package.outputs.configPackage }}
    steps:

    # Ensure that required repository variable has been created for the Package
    - name: Validate Package Config
      id: config_package
      run: |
        echo "configPackage=true" >> $GITHUB_OUTPUT;

  # Build and release the Package
  # If the repository is not configured properly, this job will be skipped
  build:
    needs: config
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.config.outputs.config_package == 'true'
    steps:

      # Checkout Local Repository
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac
        with:
            lfs: "true"

      # Get the Package version based on the package.json file
      - name: Get Version
        id: version
        uses: zoexx/github-action-json-file-properties@b9f36ce6ee6fe2680cd3c32b2c62e22eade7e590
        with: 
            file_path: "Packages/befuddledlabs.linuxvrchatsdkpatch.base/package.json"
            prop_path: "version"
    
      # Configure the Environment Variables needed for releasing the Package
      - name: Set Environment Variables
        run: |
          echo "baseZipFile=befuddledlabs.linuxvrchatsdkpatch.base-${{ steps.version.outputs.value }}".zip >> $GITHUB_ENV
          echo "baseUnityPackage=befuddledlabs.linuxvrchatsdkpatch.base-${{ steps.version.outputs.value }}.unitypackage" >> $GITHUB_ENV
          echo "version=${{ steps.version.outputs.value }}" >> $GITHUB_ENV

      # Zip the Package for release
      - name: Create Package Zip
        working-directory: "Packages/befuddledlabs.linuxvrchatsdkpatch.base"
        run: zip -r "${{ github.workspace }}/${{ env.baseZipFile }}" .
      
      # Build a list of .meta files for future use
      - name: Track Package Meta Files
        run: find "Packages/befuddledlabs.linuxvrchatsdkpatch.base/" -name \*.meta >> metaListBase
      
      # Make a UnityPackage version of the Package for release
      - name: Create UnityPackage
        uses: pCYSl5EDgo/create-unitypackage@cfcd3cf0391a5ef1306342794866a9897c32af0b
        with:
          package-path: ${{ env.baseUnityPackage }}
          include-files: metaListBase



      # Configure the Environment Variables needed for releasing the Package
      - name: Set Environment Variables
        run: |
          echo "avatarsZipFile=befuddledlabs.linuxvrchatsdkpatch.avatars-${{ steps.version.outputs.value }}".zip >> $GITHUB_ENV
          echo "avatarsUnityPackage=befuddledlabs.linuxvrchatsdkpatch.avatars-${{ steps.version.outputs.value }}.unitypackage" >> $GITHUB_ENV
          echo "version=${{ steps.version.outputs.value }}" >> $GITHUB_ENV

      # Zip the Package for release
      - name: Create Package Zip
        working-directory: "Packages/befuddledlabs.linuxvrchatsdkpatch.avatars"
        run: zip -r "${{ github.workspace }}/${{ env.avatarsZipFile }}" .

      # Build a list of .meta files for future use
      - name: Track Package Meta Files
        run: find "Packages/befuddledlabs.linuxvrchatsdkpatch.avatars/" -name \*.meta >> metaListAvatars

      # Make a UnityPackage version of the Package for release
      - name: Create UnityPackage
        uses: pCYSl5EDgo/create-unitypackage@cfcd3cf0391a5ef1306342794866a9897c32af0b
        with:
          package-path: ${{ env.avatarsUnityPackage }}
          include-files: metaListAvatars



      # Configure the Environment Variables needed for releasing the Package
      - name: Set Environment Variables
        run: |
          echo "worldsZipFile=befuddledlabs.linuxvrchatsdkpatch.worlds-${{ steps.version.outputs.value }}".zip >> $GITHUB_ENV
          echo "worldsUnityPackage=befuddledlabs.linuxvrchatsdkpatch.worlds-${{ steps.version.outputs.value }}.unitypackage" >> $GITHUB_ENV
          echo "version=${{ steps.version.outputs.value }}" >> $GITHUB_ENV

      # Zip the Package for release
      - name: Create Package Zip
        working-directory: "Packages/befuddledlabs.linuxvrchatsdkpatch.worlds"
        run: zip -r "${{ github.workspace }}/${{ env.worldsZipFile }}" .

      # Build a list of .meta files for future use
      - name: Track Package Meta Files
        run: find "Packages/befuddledlabs.linuxvrchatsdkpatch.worlds/" -name \*.meta >> metaListWorlds

      # Make a UnityPackage version of the Package for release
      - name: Create UnityPackage
        uses: pCYSl5EDgo/create-unitypackage@cfcd3cf0391a5ef1306342794866a9897c32af0b
        with:
          package-path: ${{ env.worldsUnityPackage }}
          include-files: metaListWorlds



      
      # Make a release tag of the version from the package.json file 
      - name: Create Tag
        id: tag_version_base
        uses: rickstaa/action-create-tag@88dbf7ff6fe2405f8e8f6c6fdfd78829bc631f83
        with:
          tag: "${{ env.version }}-base"
      
      # Publish the Release to GitHub
      - name: Make Release Base
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          files: |
            ${{ env.baseZipFile }}
            ${{ env.baseUnityPackage }}
            Packages/befuddledlabs.linuxvrchatsdkpatch.base/package.json
          tag_name: ${{ env.version }}-base

      # Make a release tag of the version from the package.json file
      - name: Create Tag
        id: tag_version_avatars
        uses: rickstaa/action-create-tag@88dbf7ff6fe2405f8e8f6c6fdfd78829bc631f83
        with:
          tag: "${{ env.version }}-avatars"

      - name: Make Release World
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          files: |
            ${{ env.avatarsZipFile }}
            ${{ env.avatarsUnityPackage }}
            Packages/befuddledlabs.linuxvrchatsdkpatch.avatars/package.json
          tag_name: ${{ env.version }}-avatars

      # Make a release tag of the version from the package.json file
      - name: Create Tag
        id: tag_version_worlds
        uses: rickstaa/action-create-tag@88dbf7ff6fe2405f8e8f6c6fdfd78829bc631f83
        with:
          tag: "${{ env.version }}-worlds"

      - name: Make Release World
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          files: |
            ${{ env.worldsZipFile }}
            ${{ env.worldsUnityPackage }}
            Packages/befuddledlabs.linuxvrchatsdkpatch.worlds/package.json
          tag_name: ${{ env.version }}-worlds
